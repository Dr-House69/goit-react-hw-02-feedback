{"version":3,"sources":["components/Statistics/Statistics.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss","components/Section/Section.module.scss","components/Notification/Notification.module.scss","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","item","result","FeedbackOptions","options","onLeaveFeedback","wrapper","map","option","button","type","value","onClick","Section","title","children","defaultProps","Notification","message","WrapperFeedback","App","state","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","handleLeaveFeedback","setState","previousState","feedbackOptions","keys","this","isShowStatistics","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b3702f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1wMTF\",\"result\":\"Statistics_result__XvJD8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedbackOptions_wrapper__RJZNk\",\"button\":\"FeedbackOptions_button__2tl9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2yQs4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__20EO_\"};","import styles from \"./Statistics.module.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul>\n      <li className={styles.item}>Good: {good}</li>\n      <li className={styles.item}>Neutral: {neutral}</li>\n      <li className={styles.item}>Bad: {bad}</li>\n      <li className={styles.result}>Total: {total}</li>\n      <li className={styles.result}>\n        Positive feedback: {positivePercentage}%\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import styles from \"./FeedbackOptions.module.scss\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={styles.wrapper}>\n      {options.map((option) => (\n        <button\n          className={styles.button}\n          type=\"button\"\n          key={option}\n          value={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import styles from \"./Section.module.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: \"\",\n  children: [],\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styles from \"./Notification.module.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return <p className={styles.message}>{message}</p>;\n};\n\nNotification.defaultProps = {\n  message: \"\",\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\nimport \"./App.scss\";\n\nconst WrapperFeedback = [\"WrapperFeedback\"];\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((acc, value) => acc + value, 0);\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good / this.countTotalFeedback()) * 100);\n\n  handleLeaveFeedback = (option) =>\n    this.setState((previousState) => ({ [option]: previousState[option] + 1 }));\n\n  render() {\n    const feedbackOptions = Object.keys(this.state);\n    const total = this.countTotalFeedback();\n    const isShowStatistics = total > 0;\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className={WrapperFeedback}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={feedbackOptions}\n            onLeaveFeedback={this.handleLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {isShowStatistics ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}